using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Mover : MonoBehaviour
{
    public float movementSpeed = 5.0f; // Movement speed
    public float rotationSpeed = 5.0f; // Rotation speed
    private Transform targetPoint; // Target (nearest object with the "point" tag)

    private void Update()
    {
        if (CharacterMovement.game_is_start)
        {
            // If the target is not set, find the nearest object with the "point" tag
            if (targetPoint == null)
            {
                FindNearestPoint();
            }

            // If there is a target, move towards it and rotate towards it
            if (targetPoint != null)
            {
                // Rotation towards the target
                Quaternion targetRotation = Quaternion.LookRotation(targetPoint.position - transform.position);
                transform.rotation = Quaternion.Slerp(transform.rotation, targetRotation, rotationSpeed * Time.deltaTime);

                // Calculate the movement direction
                Vector3 moveDirection = (targetPoint.position - transform.position).normalized;
                Vector3 velocity = moveDirection * movementSpeed;

                // Move the object based on direction and speed
                transform.position += velocity * Time.deltaTime;

                // If we reach the target, remove the target to find the next one
                if (Vector3.Distance(transform.position, targetPoint.position) < 0.1f)
                {
                    Destroy(targetPoint.gameObject);
                    FindNearestPoint();
                }
            }
        }
    }

    // Method to find the nearest object with the "point" tag
    private void FindNearestPoint()
    {
        GameObject[] pointObjects = GameObject.FindGameObjectsWithTag("point");
        if (pointObjects.Length > 0)
        {
            float closestDistance = float.MaxValue;

            foreach (GameObject pointObject in pointObjects)
            {
                float distance = Vector3.Distance(transform.position, pointObject.transform.position);
                if (distance < closestDistance)
                {
                    closestDistance = distance;
                    targetPoint = pointObject.transform;
                }
            }
        }
    }
}
