using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class LevelGenerator : MonoBehaviour
{
    public List<GameObject> startPrefabs;
    public List<GameObject> forwardPrefabs;
    public List<GameObject> leftPrefabs;
    public List<GameObject> rightPrefabs;
    public List<GameObject> finishPrefabs;

    private Vector3 currentPosition = Vector3.zero;
    private int left = 0;
    private int right = 0;

    void Start()
    {
        Start_pref();

        Forward();
        Right();
        Forward();
        Left();
        RandomAction();
        Forward();
        Forward();
        RandomAction();
        Forward();
        RandomAction();
        End();
        Finish();
    }

    void Start_pref()
    {
        GameObject prefab = InstantiateRandomPrefab(startPrefabs, currentPosition);
        prefab.transform.rotation = Quaternion.Euler(-90, -90, 0);
        currentPosition.z += 24.045f;
    }

    void Forward()
    {
        if (left == 0 && right == 0)
        {
            GameObject prefab = InstantiateRandomPrefab(forwardPrefabs, currentPosition);
            prefab.transform.rotation = Quaternion.Euler(-90, -90, 0);
            currentPosition.z += 24.045f;
        }
        else if (left == 1)
        {
            GameObject prefab = InstantiateRandomPrefab(forwardPrefabs, currentPosition);
            prefab.transform.rotation = Quaternion.Euler(-90, 0, -180);
            currentPosition.x -= 24.045f;
        }
        else if (right == 1)
        {
            GameObject prefab = InstantiateRandomPrefab(forwardPrefabs, currentPosition);
            prefab.transform.rotation = Quaternion.Euler(-90, 0, 0);
            currentPosition.x += 24.045f;
        }
    }

    void Left()
    {
        if (left == 0 && right == 0)
        {
            left += 1;
            currentPosition.z -= 0.87f;
            currentPosition.x += 3.97f;
            GameObject prefab = InstantiateRandomPrefab(leftPrefabs, currentPosition);
            prefab.transform.rotation = Quaternion.Euler(90, 0, 0);
            currentPosition.x -= 33.53f;
        }
        else if (right == 1)
        {
            currentPosition.z -= 3.965f;
            currentPosition.x -= 0.869f;
            GameObject prefab = InstantiateRandomPrefab(leftPrefabs, currentPosition);
            prefab.transform.rotation = Quaternion.Euler(90, -90, -180);
            right = 0;
            currentPosition.z += 33.534f;
        }
    }

    void Right()
    {
        if (left == 0 && right == 0)
        {
            right += 1;
            currentPosition.z -= 0.87f;
            currentPosition.x -= 3.97f;
            GameObject prefab = InstantiateRandomPrefab(rightPrefabs, currentPosition);
            prefab.transform.rotation = Quaternion.Euler(-90, 0, 0);
            currentPosition.x += 33.53f;
        }
        else if (left == 1)
        {
            currentPosition.z -= 3.964f;
            currentPosition.x += 0.869f;
            GameObject prefab = InstantiateRandomPrefab(rightPrefabs, currentPosition);
            prefab.transform.rotation = Quaternion.Euler(-90, 0, -90);
            left = 0;
            currentPosition.z += 33.534f;
        }
    }

    private void RandomAction()
    {
        if (left == 0 && right == 0)
        {
            int randomAction = Random.Range(0, 3);
            if (randomAction == 0)
            {
                Forward();
            }
            else if (randomAction == 1)
            {
                Left();
            }
            else if (randomAction == 2)
            {
                Right();
            }
        }
        else if (left == 1)
        {
            int randomAction = Random.Range(0, 2);
            if (randomAction == 0)
            {
                Forward();
            }
            else if (randomAction == 1)
            {
                Right();
            }
        }
        else if (right == 1)
        {
            int randomAction = Random.Range(0, 2);
            if (randomAction == 0)
            {
                Forward();
            }
            else if (randomAction == 1)
            {
                Left();
            }
        }
    }

    void Finish()
    {
        currentPosition.z -= 12.019f;
        currentPosition.x += 0.049f;
        GameObject prefab = InstantiateRandomPrefab(finishPrefabs, currentPosition);
        prefab.transform.rotation = Quaternion.Euler(0, -90, 0);
    }
    void End()
    {
        if (left == 1)
        {
            Right();
            Forward();
        }
        else if (right == 1)
        {
            Left();
            Forward();
        }
    }

    GameObject InstantiateRandomPrefab(List<GameObject> prefabList, Vector3 position)
    {
        int randomIndex = Random.Range(0, prefabList.Count);
        GameObject prefab = Instantiate(prefabList[randomIndex], position, Quaternion.identity);
        return prefab;
    }
}
